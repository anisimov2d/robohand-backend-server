# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞: python dataStore_serv.py
from flask import Flask
import paho.mqtt.client as mqtt
import paho.mqtt.publish as publish

app = Flask(__name__)
MQTT_BROKER = "127.0.0.1"
MQTT_PORT = 1883
MQTT_TOPIC = [["pP_serv", 0], ["eH_serv", 0]]

@app.route('/')
def dS_serv():
	
	arr = [ ] # –æ–±—â–∏–π –º–∞—Å—Å–∏–≤
	
	# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ + –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ TOPICS
	def on_connect(client, userdata, flags, rc):
		if rc == 0:
			print("üü¢ Connected to Mosquitto (" + MQTT_BROKER + ":" + str(MQTT_PORT) + ")")
			client.subscribe(MQTT_TOPIC)
			print("Waiting for any messages with TOPIC='" + MQTT_TOPIC[0][0] + "','" + MQTT_TOPIC[1][0] + "'...")
		else:
			print("üî¥ Connection failed")
			
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π	
	def on_message(client, userdata, msg):
		message = str(msg.payload, 'utf-8')
		print("> TOPIC: " + msg.topic + "\n" + "üì© MESSAGE: " + message)
		
		# –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø–∏—Å—å –æ—Ç pP_serv
		if msg.topic == "pP_serv":
			# –î–æ–±–∞–≤–∏—Ç—å –≤ –æ–±—â–∏–π –º–∞—Å—Å–∏–≤
			arr.append(msg.payload)
		# –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏—è –æ—Ç eH_serv
		else:
			# –°–æ–±—ã—Ç–∏–µ 1 -- –ø–æ–∂–∞—Ç—å —Ä—É–∫—É
			if msg.payload == "event_1":
				event_1_arr = arr[0]
				# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –∑–∞–ø—è—Ç–æ–π –∏ –ø–µ—Ä–µ–¥–∞—ë–º –Ω–∞ —Ä–æ–±–æ—Ä—É–∫—É
				for e in event_1_arr:
					e_str = ','.join(map(str, e))
					publish.single("dS_serv", payload = e_str, hostname = "127.0.0.1", port = 1883)
					print("üìß SEND: " + e_str)
			
			# –°–æ–±—ã—Ç–∏–µ 2 -- –≤–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç
			elif msg.payload == "event_2":
				event_2_arr = arr[1]
				# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –∑–∞–ø—è—Ç–æ–π –∏ –ø–µ—Ä–µ–¥–∞—ë–º –Ω–∞ —Ä–æ–±–æ—Ä—É–∫—É
				for e in event_2_arr:
					e_str = ','.join(map(str, e))
					publish.single("dS_serv", payload = e_str, hostname = "127.0.0.1", port = 1883)
					print("üìß SEND: " + e_str)
			
			# –°–æ–±—ã—Ç–∏–µ 3 -- –ø–æ–∫–∞–∑–∞—Ç—å –∂–µ—Å—Ç
			elif msg.payload == "event_3":
				event_3_arr = arr[2]
				# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –∑–∞–ø—è—Ç–æ–π –∏ –ø–µ—Ä–µ–¥–∞—ë–º –Ω–∞ —Ä–æ–±–æ—Ä—É–∫—É
				for e in event_3_arr:
					e_str = ','.join(map(str, e))
					publish.single("dS_serv", payload = e_str, hostname = "127.0.0.1", port = 1883)
					print("üìß SEND: " + e_str)
			
			# –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
			else:
				print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ")
	
	client = mqtt.Client()
	client.on_connect = on_connect
	client.on_message = on_message
	client.connect(MQTT_BROKER, MQTT_PORT, 60)
	client.loop_forever()
	

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=5000) # https://codex.so/python-flask