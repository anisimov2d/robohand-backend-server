# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞: python eventHandling_serv.py
from flask import Flask
import paho.mqtt.client as mqtt
import paho.mqtt.publish as publish

app = Flask(__name__)
MQTT_BROKER = "127.0.0.1"
MQTT_PORT = 1883
MQTT_TOPIC = "robohand"
MQTT_CLIENT_ID = "eH_serv"

@app.route('/')
def eH_serv():
	
	# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ + –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ TOPICS
	def on_connect(client, userdata, flags, rc):
		if rc == 0:
			print("üü¢ Connected to Mosquitto (" + MQTT_BROKER + ":" + str(MQTT_PORT) + ")")
			client.subscribe(MQTT_TOPIC)
			print("Waiting for any messages with TOPIC='" + MQTT_TOPIC + "'...")
		else:
			print("üî¥ Connection failed")
			
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —Ä–æ–±–æ—Ä—É–∫–∏	
	def on_message(client, userdata, msg):
		message = str(msg.payload, 'utf-8')
		print("\n> TOPIC: " + msg.topic + " üì© MESSAGE: " + message)
				
		# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤
		message_arr = message.split(',')
		message_arr = list(map(int, message_arr))
				
		# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â—é—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
		# message_arr = [ T1, T2, T3, T4, T5, T6, S1, S2, S3, S4, S5 ], –≥–¥–µ
		# Tn - –ø–æ–∫–∞–∑–∞–Ω–∏—è –¥–∞—Ç—á–∏–∫–æ–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
		# Sn - –ø–æ–∫–∞–∑–∞–Ω–∏—è –¥–∞—Ç—á–∏–∫–æ–≤ –¥–∞–≤–ª–µ–Ω–∏—è
		
		# –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –¥–ª—è –ª–∞–º–ø–æ—á–∫–∏
		# message = "111,222,333,444,555,666,10,20,30,40,50"
		diod_feedback = message.replace(",","")[:-10]
		publish.single("diod_feedback", payload = diod_feedback, hostname = "127.0.0.1", port = 1883)
				
		# –°–æ–±—ã—Ç–∏–µ 1 -- –ø–æ–∂–∞—Ç—å —Ä—É–∫—É
		if (29 < message_arr[0] < 45):
			publish.single("eH_serv", payload = "event_1", hostname = "127.0.0.1", port = 1883)
			print("EVENT_1. Shake hand.")
			# –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –≤ –ø—Ä–∏—ë–º–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è

		# –°–æ–±—ã—Ç–∏–µ 2 -- –≤–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç
		elif (145 < message_arr[5] < 654):
			publish.single("eH_serv", payload = "event_2", hostname = "127.0.0.1", port = 1883)
			print("EVENT_2. Take an item.")
			# –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –≤ –ø—Ä–∏—ë–º–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
		
		# –°–æ–±—ã—Ç–∏–µ 3 -- –ø–æ–∫–∞–∑–∞—Ç—å –∂–µ—Å—Ç
		elif (800 < message_arr[0] < 1455):
			publish.single("eH_serv", payload = "event_3", hostname = "127.0.0.1", port = 1883)
			print("EVENT_3. Show gesture.")
			# –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –≤ –ø—Ä–∏—ë–º–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
		
		# –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
		else:
			print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ")
	
	client = mqtt.Client(MQTT_CLIENT_ID)
	client.on_connect = on_connect
	client.on_message = on_message
	client.connect(MQTT_BROKER, MQTT_PORT, 60)
	client.loop_forever()

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=5001) # https://codex.so/python-flask